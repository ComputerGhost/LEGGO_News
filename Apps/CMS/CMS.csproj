<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="IdentityServer4.AspNetIdentity" Version="4.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.4" />
    <PackageReference Include="ProxyKit" Version="2.3.4" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\pages\ArticleCreate\ContentTab.tsx" />
    <None Remove="ClientApp\src\pages\ArticleEdit\ContentTab.tsx" />
    <None Remove="ClientApp\src\pages\ArticleEdit\index.ts" />
    <None Remove="ClientApp\src\pages\TagEdit\Page.tsx" />
    <None Remove="ClientApp\src\pages\TagCreate\Page.tsx" />
    <None Remove="ClientApp\src\pages\TagList\ListItem.tsx" />
    <None Remove="ClientApp\src\pages\TagList\Page.tsx" />
    <None Remove="ClientApp\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\tsconfig.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\pages\ArticleCreate\ContentTab.tsx" />
    <TypeScriptCompile Include="ClientApp\src\pages\ArticleEdit\ContentTab.tsx">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\pages\ArticleEdit\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\pages\TagEdit\Page.tsx">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\pages\TagCreate\Page.tsx">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\pages\TagList\ListItem.tsx" />
    <TypeScriptCompile Include="ClientApp\src\pages\TagList\Page.tsx" />
  </ItemGroup>

  <ItemGroup>
    <None Update="ClientApp\src\api\ApiError.tsx">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\api\endpoints\articles.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\api\ApiErrorBoundary.tsx">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\api\RestApi.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\api\endpoints\tags.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\components\Editor\Tools.tsx">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\hooks\useAuth.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\api\endpoints\media.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\api\endpoints\characters.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\components\Editor\Editor.tsx">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\components\Editor\Container.tsx">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\components\Editor\index.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\components\TabPanel.tsx">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\components\InfiniteScroll.tsx">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\components\DropFile.tsx">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\components\SearchToolbar.tsx">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\components\Page.tsx">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\pages\ArticleCreate\index.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\pages\ArticleList\index.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\pages\CharacterCreate\index.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\pages\CharacterEdit\index.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\pages\CharacterList\index.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\pages\Help\index.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\pages\Home\index.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\pages\MediaList\index.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\pages\TagEdit\index.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\pages\TagCreate\index.ts">
      <SubType>Code</SubType>
    </None>
    <None Update="ClientApp\src\pages\TagList\index.ts">
      <SubType>Code</SubType>
    </None>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
